# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- task: PythonScript@0
  inputs:
    scriptSource: 'inline'
    script: from urllib.request import urlretrieve; urlretrieve('https://cdn.azul.com/zulu/bin/zulu11.37.19-ca-fx-jdk11.0.6-win_x64.zip', 'zulu11.37.19-ca-fx-jdk11.0.6-win_x64.zip')
- task: Gradle@2
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'LocalDirectory'
    jdkFile: 'zulu11.37.19-ca-fx-jdk11.0.6-win_x64.zip'
    jdkDestinationDirectory: '/builds/binaries/externals'
    cleanDestinationDirectory: true
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'packageApplicationExe'
- task: PublishPipelineArtifact@1
  inputs:
    path: $(System.DefaultWorkingDirectory)/build/distributions
    artifact: OMERO.insight-5.5.10-SNAPSHOT.msi
